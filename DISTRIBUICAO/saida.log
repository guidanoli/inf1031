

LES - Laboratório de Engenharia de Software DI/PUC-Rio
      Arcabouço de teste de módulos C  (c) 2006

---------------------------------------------
      Construto sob teste: Grupo7Arv1.exe

      Arquivo de teste:    TestaGrafo.script


!!!    0  Linha:     1  // Script:    TestaGrafo.script 
!!!    0  Linha:     2  // Autores:   Guilherme Dantas 
!!!    0  Linha:     3  // Data:      30/09/2018 
!!!    0  Linha:     4  // Propósito: Testa a integridade das funções de acesso 
!!!    0  Linha:     5  //            do módulo Grafo para com sua estrutura de dados, 
!!!    0  Linha:     6  //            baseando-se no modelo arquitetado. 
!!!    0  Linha:     7  // 
    9  == Declarar as condicoes de retorno
   23  == Declarar os valores dos vértices
   32  == Declarar os valores das arestas
   37  == Declarar os valores para sentido de caminhamento
   41  == Declarar os valores booleanos para procurarvertice
   45  == Declarar string vazia
   48  == Declarar erro ao obter número de vértices/origens
   51  == Criar grafo
   54  == Destruir grafo existente
   57  == Destruir grafo inexistente
   60  == Criar e destruir 3 grafos diferentes
   68  == Inserir vértice em grafo inexistente
   71  == Inserir um vértice em grafo existente
   76  == Inserir múltiplos vértices em grafo existente
   83  == Testar inserir vértices com mesmo valor em grafo existente
   89  == Inserir vértices com mesmo valor em grafos diferentes
!!!    0  Linha:    90  // Prova que grafos são independentes 
  101  == Testar inserir aresta em grafo inexistente
  104  == Testar inserir aresta entre vértices inexistentes
  109  == Testar inserir aresta entre vértice existente (1o parm.) e vértice inexistente (2o parm.)
  115  == Testar inserir aresta entre vértice existente (2o parm.) e vértice inexistente (1o parm.)
  121  == Inserir aresta entre vértices existentes e diferentes
  128  == Inserir aresta que parte e aponta para o mesmo vértice existente
  134  == Tentar inserir aresta com mesmo valor, destino e origem de outro existente (destino != origem)
  142  == Inserir aresta com mesmo valor, destino e origem de outro existente (destino != origem) em grafos diferentes
!!!    0  Linha:   143  // Prova que grafos são independentes 
  160  == Tentar inserir aresta com mesmo valor, destino e origem de outro existente (destino == origem)
  167  == Inserir aresta com mesmo valor, destino e origem de outro existente (destino == origem) em grafos diferentes
!!!    0  Linha:   168  // Prova que grafos são independentes 
  182  == Inserir diversas arestas com mesmo valor partindo do mesmo vértice e apontando para vértices diferentes
  192  == Testar caminhar por grafo inexistente
  195  == Testar caminhar por grafo vazio
  200  == Testar caminhar por grafo não-vazio mas por aresta inexistente
  206  == Testar caminhar por grafo com três vértices mas por aresta que não conecta vértice corrente
!!!    0  Linha:   211  // OBS: vértice corrente é o último a ser inserido no grafo 
  216  == Caminhar por aresta que conecta vértices diferentes (por tras)
  224  == Caminhar por aresta que conecta vértices diferentes (pela frente)
  232  == Caminhar por aresta que parte e aponta para o mesmo vértice (pela frente)
  239  == Caminhar por aresta que parte e aponta para o mesmo vértice (por trás)
  246  == Remover vértice de grafo inexistente
  249  == Remover vértice de grafo vazio
  254  == Remover vértice de grafo com um vértice que não o que se deseja remover
  260  == Remover vértice de um grafo cujo valor está presente em vértice de outro grafo
!!!    0  Linha:   261  // Prova que grafos são independentes 
  269  == Remover vértice existente de um grafo existente
  275  == Remover vértice com diversas arestas conectadas
  287  == Remover todos os vértices de um grafo manualmente
  303  == Testar remover aresta de grafo inexistente
  306  == Testar remover aresta em grafo vazio
  311  == Testar remover aresta entre vértices inexistentes
  317  == Testar remover aresta entre destino (existe) e origem (não existe)
  323  == Testar remover aresta entre destino (não existe) e origem (existe)
  329  == Testar remover aresta inexistente entre vértice existentes
  336  == Testar remover aresta entre vértice existentes
  344  == Testar obter valor de grafo inexistente
  347  == Testar obter valor de um grafo vazio
  352  == Obter valor de um grafo existente e de um vértice existente
  358  == Testar tornar origem em grafo inexistente
  361  == Testar tornar origem em grafo vazio
  366  == Testar tornar origem em grafo com um vértice (origem)
  372  == Testar procurar vértice em grafo inexistente
  375  == Testar procurar vértice em grafo vazio
  380  == Testar procurar vértice inexistente em grafo com vértices
  386  == Procurar vértice existente
  392  == Procurar vértice existente em outro grafo
!!!    0  Linha:   393  //Prova que grafos são independentes 
  402  == Tornar origem outro vértice que não a origem inicial, e "des-tornar" a origem inicial uma origem
  412  == Testar remover único vértice origem dentre vários resultar em erro
  421  == Tornar quase todos vértices origem e deletar todos manualmente e testar a última origem dar erro
  436  == Obter valor de todos os vértices de um grafo
  452  == Testar procurar origem apenas em grafo inexistente
  455  == Testar procurar origem apenas em grafo vazio
  460  == Testar procurar origem apenas em grafo com dois vértices (mas o procurado não é origem)
  466  == Procurar origem em grafo com um vértice apenas (logo, origem)
  472  == Testar exibir grafo inexistente
  475  == Testar exibir grafo vazio
  480  == Testar exibir grafo a partir de vértice inexistente
  486  == Testar exibir grafo a partir de vértice existente que não é origem
  493  == Exibir grafo de um único vértice
  499  == Exibir grafo de um único vértice com uma aresta apontando para si mesmo
  506  == Exibir grafo com dois vértices disconexos
!!!    0  Linha:   513  //*********************************************************************** 
!!!    0  Linha:   514  // 
!!!    0  Linha:   515  //	Notação de grafo dirigido em texto 
!!!    0  Linha:   516  //	[A]		A é origem 
!!!    0  Linha:   517  //	--a-->		aresta a 
!!!    0  Linha:   518  //	B		vértice B 
!!!    0  Linha:   519  //	[A] --a--> B	aresta a sai da origem A e vai para vértice B 
!!!    0  Linha:   520  // 
!!!    0  Linha:   521  //	As conexões são separadas por | 
!!!    0  Linha:   522  // 
!!!    0  Linha:   523  //*********************************************************************** 
  525  == Exibir grafo [A] --a--> B
  533  == Exibir grafo [A] --a--> B | B --a--> [A]
  542  == Exibir grafo [A] --a--> B | B --a--> B
  551  == Exibir grafo [A] --a--> B | B --a--> [A] | B --a--> B | [A] --a--> [A]
  562  == Exibir grafo [A] --a--> B | [A] --b--> B | [A] --c--> B
  572  == Exibir grafo [A] --a--> B | [A] --a--> C
  582  == Exibir grafo [A] --a--> B | B --a--> C
  592  == Exibir grafo [A] --a--> B | B --a--> C | [A] --a--> C
  603  == Exibir grafo [A] --a--> B | B --a--> C | C --a--> [A]
  614  == Exibir grafo [A] --a--> [B] | [B] --a--> [A]
  625  == Exibir grafo [A] --a--> [B]
  635  == Exibir grafo [A] --a--> B | B --a--> C | C --a--> E | E --a--> F | C --a--> D | D --a--> B | B --a--> F
  653  == Exibir grafo [A] --a--> C | [A] --a--> B | B --a--> C
  664  == Obter número de vértices de grafo inexistente
  667  == Obter número de vértices de grafo vazio
  672  == Obter número de vértices de grafo com um vértice
  678  == Obter número de vértices de grafo com dois vértices
  685  == Obter número de vértices de grafo com n vértices (enquanto insere/remove)
  706  == Obter número de origens de grafo inexistente
  709  == Obter número de origens de grafo vazio
  714  == Obter número de origens de grafo com um vértice
  720  == Obter número de origens de grafo com dois vértices
  727  == Obter número de origens de grafo com n vértices (enquanto insere/remove)

!!! Número de linhas lidas:         747
!!! Número de casos de teste:        98
!!! Número comandos corretos:       526
!!! Número de falhas encontradas:     0

!!! Não foram encontrados problemas


!!! Numero de espacos ainda alocados: 0