

LES - Laboratório de Engenharia de Software DI/PUC-Rio
      Arcabouço de teste de módulos C  (c) 2006

---------------------------------------------
      Construto sob teste: PROGMOD.exe

      Arquivo de teste:    TestaGrafo.script


!!!    0  Linha:     1  // Script:    TestaGrafo.script 
!!!    0  Linha:     2  // Autores:   Guilherme Dantas 
!!!    0  Linha:     3  // Data:      30/09/2018 
!!!    0  Linha:     4  // Propósito: Testa a integridade das funções de acesso 
!!!    0  Linha:     5  //            do módulo Grafo para com sua estrutura de dados, 
!!!    0  Linha:     6  //            baseando-se no modelo arquitetado. 
!!!    0  Linha:     7  // 
    9  == Declarar as condicoes de retorno
   22  == Declarar os valores dos vértices
   28  == Declarar os valores das arestas
   33  == Declarar os valores para sentido de caminhamento
   37  == Criar grafo
   40  == Destruir grafo existente
   43  == Destruir grafo inexistente
   46  == Criar e destruir 3 grafos diferentes
   54  == Inserir vértice em grafo inexistente
   57  == Inserir um vértice em grafo existente
   62  == Inserir múltiplos vértices em grafo existente
   69  == Testar inserir vértices com mesmo valor em grafo existente
   75  == Inserir vértices com mesmo valor em grafos diferentes
!!!    0  Linha:    76  // Prova que grafos são independentes 
   87  == Testar inserir aresta em grafo inexistente
   90  == Testar inserir aresta entre vértices inexistentes
   95  == Testar inserir aresta entre vértice existente (1o parm.) e vértice inexistente (2o parm.)
  101  == Testar inserir aresta entre vértice existente (2o parm.) e vértice inexistente (1o parm.)
  107  == Inserir aresta entre vértices existentes e diferentes
  114  == Inserir aresta que parte e aponta para o mesmo vértice existente
  120  == Tentar inserir aresta com mesmo valor, destino e origem de outro existente (destino != origem)
  128  == Inserir aresta com mesmo valor, destino e origem de outro existente (destino != origem) em grafos diferentes
!!!    0  Linha:   129  // Prova que grafos são independentes 
  146  == Tentar inserir aresta com mesmo valor, destino e origem de outro existente (destino == origem)
  153  == Inserir aresta com mesmo valor, destino e origem de outro existente (destino == origem) em grafos diferentes
!!!    0  Linha:   154  // Prova que grafos são independentes 
  168  == Inserir diversas arestas com mesmo valor partindo do mesmo vértice e apontando para vértices diferentes
  178  == Testar caminhar por grafo inexistente
  181  == Testar caminhar por grafo vazio
  186  == Testar caminhar por grafo não-vazio mas por aresta inexistente
  192  == Testar caminhar por grafo com três vértices mas por aresta que não conecta vértice corrente
!!!    0  Linha:   197  // OBS: vértice corrente é o último a ser inserido no grafo 
  202  == Caminhar por aresta que conecta vértices diferentes (por tras)
  210  == Caminhar por aresta que conecta vértices diferentes (pela frente)
  218  == Caminhar por aresta que parte e aponta para o mesmo vértice (pela frente)
  225  == Caminhar por aresta que parte e aponta para o mesmo vértice (por trás)
  232  == Remover vértice de grafo inexistente
  235  == Remover vértice de grafo vazio
  240  == Remover vértice de grafo com um vértice que não o que se deseja remover
  246  == Remover vértice de um grafo cujo valor está presente em vértice de outro grafo
!!!    0  Linha:   247  // Prova que grafos são independentes 
  255  == Remover vértice existente de um grafo existente
  261  == Remover vértice com diversas arestas conectadas
  273  == Remover todos os vértices de um grafo manualmente e verificar arestas excluídas
  289  == Testar remover aresta de grafo inexistente
  292  == Testar remover aresta em grafo vazio
  297  == Testar remover aresta entre vértices inexistentes
  303  == Testar remover aresta entre destino (existe) e origem (não existe)
  309  == Testar remover aresta entre destino (não existe) e origem (existe)
  315  == Testar remover aresta inexistente entre vértice existentes
  322  == Testar remover aresta entre vértice existentes

!!! Número de linhas lidas:         328
!!! Número de casos de teste:        46
!!! Número comandos corretos:       224
!!! Número de falhas encontradas:     0

!!! Não foram encontrados problemas


!!! Numero de espacos ainda alocados: 0