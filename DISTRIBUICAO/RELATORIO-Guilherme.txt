Data	Horas Trabalhadas	Tipo de Tarefa			Descrição da Tarefa Realizada
-------------------------------------------------------------------------------------------------------------------
15/08	1h			estudar				Ler os documentos .pdf na pasta do arcabouço
16/08	1h			estudar				Entender a pasta arcabouço
17/08	30min			estudar				Ler o código fonte de ARVORE.C e TESTARV.C
21/08	1h			estudar				Gerar o executável e saída.txt
24/08	3h			especificar as funções		ARVORE.C agora tem funções que recebem tpArvore*
								para trabalhar com mais de uma árvore
24/08	1h			estudar				Estudar árvores binárias e caminhamento
24/08	3h			codificar módulo		Codificar exibeArvore de ARVORE.C
25/08	2h			revisar código do módulo	Revisar exibeArvore de ARVORE.C
29/08   30min             	estudar                         Configurar github para uso coletivo do grupo
29/08	30min			codificar módulo		Codificar TESTARV.C para trabalhar com um número
								pré-determinado de árvores (no caso, 10)
29/08	30min			codificar módulo		Codificar TESTARV.C para que aceite o comando
								"=exibe" para acionar a função de acesso exibeArvore(),
								e, para isso, mudar o tipo de retorno desta função
								para ARV_tpCondRet. Consequentemente, alterando ARVORE.C e
								ARVORE.H e a documentação da função.
29/08	2h			redigir script de teste		Familiarizar-se com o script de teste. Surgiram insconsistências
								que devem ser advindas do arcabouço, e não do script.
30/08	30min			revisar código do módulo	Faltava receber "CondRetEsperada" para os comands exibirArvore
								e DestruirArvore.
30/08	30min			projetar			Arquitetado um arquivo .bat para que seja criada a pasta DISTRIBUICAO,
								outro para deletar todos os arquivos nesta pasta, e um outro para
								rodar um script com nome qualquer (o prompt do cmd recebe o nome),
								otimizando bastante a fase de scripts de teste.
30/08	30min			redigir script de teste		Feito a primeira versão do script que engloba todas as funções do módulo.
								Não é a versão final, é claro, mas estabelece uma base para as próximas.
31/08	30min			redigir script de teste		Adaptar os scripts fornecidos na pasta simples do ARCABOUÇO para os
								comandos alterados, fornecendo sempre o índice da árvore corrente.
01/09	1h			codificar módulo		Adatação da função exibeArvore(), passando por referência uma string, que é
								o caminhamento pela esquerda da árvore em questão. Além disso, adaptou-se
								o comando de script para receber a string esperada, comparando com a obtida.
								Além disso, implementou-se a função LimpaModo(), que substitui todos os
								modos de visita de uma árvore por outra, essencial para a função exibeArvore().
01/09	15min			redigir script de teste		Script para testar a exibição da árvore "TesteArvoreExibe.script". Rodou sem erros.
03/09	1h30min			redigir script de teste		Toques finais no script para testar a função de acesso "exibirArvore", com mudanças
								sutis no código para árvores elementares e complexas.
04/09	15min			redigir script de teste		Redigir o script para testar o caso em que a string de exibição de árvore
								ultrapassa o limite do buffer pré-definido no header ARVORE.H, que é de 500 caracteres.
04/09	2h			diagnosticar e corrigir os	A string de exibição era a árvore truncada no limite do BUFFER. Demorou-se muito tempo
				problemas encontrados		para entender que o problema era resolvido através da limpeza da string obtida
								e passagem de uma condição de retorno nova chamada ARV_CondRetBufferOverflow.
04/09	30min			revisar script de teste		Agora, nos toques finais, foram substituídos todos os argumentos de condição de retorno
								esperada de inteiros para constantes definidas no começo do script, assim como foi
								exemplificado nos scripts disponíveis na pasta simples com radical "Simb". Esta substituição
								foi feita com auxílio de um código em Python.
04/09	15min			realizar os testes		Testar todos os scripts. Deram todos OK, sem nenhum erro.
				