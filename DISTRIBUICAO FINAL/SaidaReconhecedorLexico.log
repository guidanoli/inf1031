

LES - Laboratório de Engenharia de Software DI/PUC-Rio
      Arcabouço de teste de módulos C  (c) 2006

---------------------------------------------
      Construto sob teste: TRAB3-1.exe

      Arquivo de teste:    TestaReconhecedorLexico.script


!!!    0  Linha:     1  // Script:    			TestaReconhecedorLexico.script 
!!!    0  Linha:     2  // Autor:     			Guilherme Dantas, Nagib 
!!!    0  Linha:     3  // Versionamento:		0.1	26/10/2018	criarlexrec, destruirlexrec 
!!!    0  Linha:     4  //				0.2	26/10/2018	inserirestado, removerestado 
!!!    0  Linha:     5  //				0.3	26/10/2018	inserirtransicao, removertransicao 
!!!    0  Linha:     6  //				0.4	05/11/2018	cmparquivos 
!!!    0  Linha:     7  //				0.5	09/11/2018	reconhecestring 
!!!    0  Linha:     8  //				0.6	10/11/2018	reconhecearquivo 
!!!    0  Linha:     9  // Propósito: 			Testa a integridade dos comandos suportados pelo Reconhecedor Léxico 
!!!    0  Linha:    10  //				para com sua estrutura de dados, baseando-se no modelo arquitetado. 
!!!    0  Linha:    11  //				Além disso, testa alguns exemplos de autômatos finitos. 
!!!    0  Linha:    12  // 
   14  == Declarar as condicões de retorno do grafo
!!!    0  Linha:    15  // para funções: 	criarlexrec, destruirlexrec, 
!!!    0  Linha:    16  //			inserirestado, removerestado, 
!!!    0  Linha:    17  //			inserirtransicao, removertransicao 
   31  == Declarar as condicões de retorno do reconhecedor léxico
!!!    0  Linha:    32  // para funções:	cmparquivos, reconhecestr, reconhecearq 
   44  == Declarar Tipos de Estados
   48  == Relatório
   52  == Declarar nome arbitrário para Estado
   55  == Declarar Rótulos
   62  == Criar Reconhecedor Léxico
   65  == Destruir Reconhecedor Léxico
   68  == Testar destruir Reconhecedor Léxico inexistente
   71  == Inserir Estado em Reconhecedor Léxico inexistente
   74  == Inserir Estado com tipo de Estado inválido e recuperar
>>>    1  Linha:    75  Erro nos parâmetros do comando:  =inserirestado 0 NomeDummy 37 GrafoNaoExiste
<<<    0  Linha:    76  Falha esperada foi recuperada. 
   78  == Inserir Estado e destruir Reconhecedor Léxico ainda com o Estado existente
   83  == Testar inserir dois Estados com mesmo id no mesmo Reconhecedor Léxico
   89  == Testar remover Estado de Reconhecedor Léxico inexistente
   92  == Testar remover Estado de Reconhecedor Léxico vazio
   97  == Testar remover Estado inexistente de Reconhecedor Léxico
  103  == Testar remover Estado origem de Reconhecedor Léxico com mais de um Estado
  112  == Remover Estado de Reconhecedor Léxico
  118  == Testar inserir Transição em Reconhecedor Léxico inexistente
  121  == Testar inserir Transição entre Estados inexistentes em Reconhecedor Léxico
  126  == Inserir Transição entre Estados existentes em um Reconhecedor Léxico
  132  == Testar inserir Transição já existente em um Reconhecedor Léxico
  139  == Inserir Transição com mesmo Rótulo indo para Estados diferentes
  150  == Inserir Transição com Rótulos diferentes entre os mesmos Estados
  159  == Testar remover Transição de Reconhecedor Léxico inexistente
  162  == Testar remover Transição de Reconhecedor Léxico vazio
  167  == Remover Transição de Reconhecedor Léxico
  174  == Testar remover Transição inexistente
  181  == Testar remover Transição entre Estados inexistentes
  187  == Testar conflito de rótulos
!!!    0  Linha:   188  // Graças à função PercorreAresta, separada de ComparaRotulos, pode-se inserir uma 
!!!    0  Linha:   189  // aresta cujo valor pertence ao conjunto armazenado no Rótulo de outra transição 
  196  == Testar comparar arquivos iguais
  199  == Testar comparar arquivos diferentes
!!!    0  Linha:   202  // String 
  204  == Testar reconhecer string com Reconhecedor Léxico inexistente
!!!    0  Linha:   205  // Não gera arquivo 
  208  == Testar reconhecer string com path vazia e recupar logo em seguida
>>>    1  Linha:   209  Erro nos parâmetros do comando:  =reconhecerstring "a" "" RecLexNaoExiste
<<<    0  Linha:   210  Falha esperada foi recuperada. 
  212  == Testar reconhecer string com Reconhecedor Léxico vazio
  218  == Testar reconhecer string com Reconhecedor Léxico com um estado apenas mas sem transição
  225  == Testar reconhecer string com Reconhecedor Léxico com um estado inicial e uma auto-transição
  233  == Testar reconhecer string com letras
  248  == Testar reconhecer string com decimais
  259  == Testar reconhecer string com espaçamento
  272  == Testar reconhecer string com outros
  287  == Testar reconhecer string com transições, respeitando a prioridade entre elas
  304  == Testar reconhecer string quando o ponteiro vai de um estado final para um não-final
  316  == Testar reconhecer string quando o ponteiro inicia o retrocesso num estado final
  325  == Testar reconhecer string com espaçamento
!!!    0  Linha:   335  // Arquivos 
  337  == Testar reconhecer arquivo com Reconhecedor Léxico inexistente
!!!    0  Linha:   338  //Não gera arquivo 
  341  == Testar reconhecer arquivo com Reconhecedor Léxico vazio
  347  == Testar reconhecer arquivo com mesmo path da saída
  352  == Testar reconhecer arquivo com Reconhecedor Léxico com um estado apenas mas sem transição
  359  == Testar reconhecer arquivo com Reconhecedor Léxico com um estado inicial e uma auto-transição
  367  == Testar reconhecer arquivo com letras
  382  == Testar reconhecer arquivo com decimais
  393  == Testar reconhecer arquivo com espaçamento
!!!    0  Linha:   403  // 
!!!    0  Linha:   404  // Nota importante: 	o reconhecedor de arquivo texto não lê o caractere "\r", que corresponde 
!!!    0  Linha:   405  //			ao retrocesso de carro (mas poderiamos obtê-lo com a leitura do arquivo em 
!!!    0  Linha:   406  //			binário). Portanto, deve-se ter isso em mente na confecção de um reconhecedor 
!!!    0  Linha:   407  //			léxico para arquivos e strings. Eles não se distinguem neste quesito. 
!!!    0  Linha:   408  // 
  412  == Testar reconhecer arquivo com outros
  427  == Testar reconhecer arquivo com transições, respeitando a prioridade entre elas
  444  == Testar reconhecer arquivo quando o ponteiro vai de um estado final para um não-final
  456  == Testar reconhecer string quando o ponteiro inicia o retrocesso num estado final
  465  == Testar reconhecer string com espaçamento

!!! Número de linhas lidas:         473
!!! Número de casos de teste:        58
!!! Número comandos corretos:       323
!!! Número de falhas encontradas:     0

!!! Não foram encontrados problemas


!!! Numero de espacos ainda alocados: 0