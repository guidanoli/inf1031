Data	Horas Trabalhadas	Tipo de Tarefa			Descrição da Tarefa Realizada
-------------------------------------------------------------------------------------------------------------------
12/11	1h			estudar				Li parte do código de definição de CESPDIN.C
21/11	1h			codificar módulo		Alteração da estrutura de Lista para adição dos
								campos tam, pCab, TipoValor no elemento, e TipoValor
								na cabeça, além da devida implementação da atribuição
								desses valores aos seus devidos campos.
21/11	1h			projetar			Fazer modelo da lista até o momento, com as
								modificações descritas acima.
28/11	1h			estudar				Li parte da documentação de CESPIN.H
29/11	1h			codificar módulo		Protótipos das funções de debug no módulo LISTA
								e os correspondentes comandos em TESTLIS.
30/11	3h			codificar módulo		Implementados contadores no módulo LISTA, através
								do módulo disponibilizado pelo arcabouço que inter-
								preta os comandos para contadores do módulo CONTA.
								+ Verificador para lista (início do desenvolvimento
								com bastantes assertivas executáveis implementadas)
								+ Função "ProcurarValor" agora testável.
30/11	1h			revisar script de teste		Adaptação do script de teste superficial que A.V.S.
								havia redigido, com verificadores a cada comando
								que interfirisse na estrutura da lista + contadores
								funcionando corretamente, e com nenhum zerado para
								estrutura não deturpada. Os contadores até agora
								inseridos estão apenas no começo das funções.
								+ Função "IrInicioLista" e "IrFinalLista" testados.
30/11	2h			revisar código módulo		Descobri que não era para colocar contadores fora
								da função verificadora. Retirei-os e também os
								asserts. Coloquei os contadores dentro da função
								verificadora. + Função recursiva "VerificaMemória"
								que marca como ativos todos os espaços atrelados à
								cabeça de Lista fornecida.
30/11	1h			revisar código módulo		Consertada função VerificaMemória, que estava obtendo
								o valor do elemento, ao invés do endereço do mesmo
								para percorrer pela lista, resultando em crash.
								+ Criado laço em VerificaLista para achar espaços
								alocados dinamicamento com alguns dos tipos de
								espaços definidos em TiposEspacosLista.def.
01/12	1h			revisar código módulo		Exceção em código de Deturpar para modos de Deturp.
								que acessem ponteiro do elemento corrente, para
								que a função aborte antes de o programa voar.
								+ Testa.bat abrindo acumulador de contadores.
01/12	1h			redigir script de testes	Casos para contadores 1, 2 e 3.
01/12	1h			revisar código módulo		Feitos os ajustes necessários para casos de testes
								para contadores 1, 2 e 3.
01/12	1h			redigir script de testes	Casos para contadores 4 a 10.
01/12	1h			revisar código módulo		Feitos os ajustes necessários para casos de testes
								para contadores 4 a 10.
01/12	1h			redigir script de testes	Casos para contadores 11 e 12.
01/12	1h			revisar código módulo		Feitos os ajustes necessários para casos de testes
								para contadores 11 e 12.
01/12	1h			redigir script de testes	Casos para contadores 4b, 5b e 6b.
01/12	1h			redigir código módulo		Comandos que facilitam a redação dos scripts de
								teste -- liberarinativos e tornarinativos
01/12	1h			redigir script de testes	Casos para contadores 15,17,18,19.
01/12	1h			revisar código módulo		Adaptações necessárias para contadores 15,17,18,19.
02/12   1h                      redigir script de testes        Todos os contadores testados. Contudo, ainda há
                                                                um espaço alocado ainda...
02/12	1h			revisar código módulo		Descobri o espaço alocado. Criei um comando no
								módulo TESTLIS que chama a função que exibe todos
								os espaços da LEA. O espaço que sobrava era o vetor
								EspacoLixo, que não era liberado porque o free
								estava depois do return. Assim que concertado este
								pequeno problema, o total de espaços ainda alocados
								se tornou zero.
02/12	1h			revisar script de testes	Percebeu-se que não foram usados todos os modos
								de deturpação passados pelo enunciado. Viu-se,
								então, que também deveriam ser testados alguns
								casos de testes remetentes ao campo tam, pValor,
								pProx e pAnt...
02/12	2h			redigir script de testes	Regididos os casos que estavam faltando
02/12	2h			redigir código de módulo	Implementados os modos de deturpação que faltavam
								+ verificações necessárias para campo tam.