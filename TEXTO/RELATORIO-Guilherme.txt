Data	Horas Trabalhadas	Tipo de Tarefa			Descrição da Tarefa Realizada
-------------------------------------------------------------------------------------------------------------------
06/10	30min			codificar módulo		Esqueleto de PILHA.C, PILHA.H e TESTPIL.C
06/10	10min			codificar script de teste	Script de teste para PILHA com criar e destruir
07/10   2h			codificar módulo		empilhar, desempilhar
08/10   2h			codificar script de teste	empilhar, desempilhar, vazia
08/10	30min			projetar			Funções no módulo VERTICE a serem implementadas
								para se implementar a função de exibição do
								do grafo
08/10	2h			codificar módulo		obterarestacorr, avancararestacorr, irinicio...
08/10	1h			redigir script de teste		obterarestacorr, avancararestacorr, irinicio...
09/10	1h			codificar módulo		avancararestacorr retorna fimlista agora
09/10	15min			redigir script de teste		avancararestacorr retorna fimlista agora
09/10	30min			revisar código do módulo	procuravertice agora recebe booleano
09/10	1h			revisar script de teste		procuravertice agora recebe booleano
09/10	2h			codificar módulo		exibirgrafo
09/10	30min			redigir script de teste		exibirgrafo (incompleto)
10/10	10min			revisar projeto			vértice necessita de flag para caminhamento
10/10	30min			codificar módulo		mudarflag, obterflag e inicialização de flag
								em criarvertice, e flag na struct de vertice
10/10	5min			redigir script de teste		funções de flag de vertice
11/10	2h			projetar			redesenhar algoritmo para loop de caminhamento
								de grafo em pseudocódigo
12/10	4h			codificar módulo		copiarpilha, exibirgrafo
12/10	1h			redigir script de teste		copiarpilha, exibirgrafo
22/10	1h			revisar código do módulo	pré-compiladores de pilha, biblioteca estática
26/10	2h			codificar módulo		criar, destruir rec.lex e estado
26/10	2h			redigir script de teste		criar, destruir rec.lex e estado
26/10	1h			revisar código do módulo	erro no código de VERTICE.C, acesso a ponteiro nulo
26/10	1h			codificar módulo		ins./remov. transicao
26/10	1h			redigir script de teste		ins./remov. transicao
27/10	1h			revisar código do módulo	erro no código de GRAFO.C, contador de origens
27/10	1h			codificar código do módulo	contador de origens e vértices c/ funções de acesso
27/10	30min			redigir script de teste		contador de origens e vértices c/ funções de acesso
27/10	2h			redigir código do módulo	função que permite caminhar pelo reclex apenas
								passando o caracter do fluxo de entrada
28/10	1h			revisar código do módulo	Adicionada a função PercorreAresta na cabeça
								do grafo no módulo GRAFO.C, e adaptadas as funções
								CriarGrafo e CaminharGrafo com a adição desta
								função. Além disso, atualizada a função
								PercorrerAresta do módulo VERTICE.C com a função
								que leva em consideração prioridade de percurso.
								Alterado tbm o módulo TSTGRF.C. Todos os testes
								rodam com sucesso.
28/10	1h			projetar			Percebe-se necessário estabelecer uma prioridade
								entre as arestas em relação ao caminhamento ou não
								dessas dado um caracter. Esta decisão é feita
								na função PercorreAresta. As prioridades estabele-
								cidas são: 3 (Rótulo possui o caractere), 2 (Rótulo
								possui o conjunto que contém o caractere), 1
								(Rótulo possui '\o', ou seja, outros caracteres),
								0 (Rótulo não se aplica a nenhum dos critérios).
28/10	30min			revisar código do módulo	Adaptada a função PercorreAresta segundo os cri-
								térios esclarecidos anteriormente.
29/10	2h			projetar			função ReconheceStr
31/10	2h			projetar			função ReconheceStr (de novo)
04/11	2h			projetar			função ReconheceStr (de novo)
04/11	1h			codificar módulo		função EsvaziarPilha no módulo PILHA
04/11	1h			redigir script de teste		função EsvaziarPilha no módulo PILHA
04/11	2h			redigir script de teste		função ReconheceStr -- começando a testar
05/11	1h			codificar módulo		função ComparaArq
05/11	1h			redigir script de teste		função ReconheceStr -- testando
05/11	3h			revisar código de módulo	função CriarAresta (VERTICE.C), agora mais genérica
								( restrição de arestas --> em GRAFO.C e RECLEX.C
								também ) + reajustes no módulo de testes e script
								de testes para o módulo VERTICE, GRAFO e RECLEX.
07/11	1h			projetar			Discussão com Nagib sobre Estado Inicial E Final
07/11	1h			redigir script de teste		função ReconheceStr -- reconhecendo rec.lexs.
08/11	2h			redigir script de teste		função ReconheceStr -- continuação
08/11	1h			revisar código de módulo	Percebi que a função ReconheceStr "come" um caractere
								cada vez que reconhece um lexema. Isto não era
								percebido pois sempre se separavam os lexemas com
								espaços, como se fosse algo natural do Rec. Lex.
								ignorá-los. Foi removida apenas uma linha em que
								o apontador para string era incrementada de 1.
08/11	30min			revisar script de teste		Agora lexemas separados de espaço possuem um
								espaço a mais no começo. Tudo foi corrigido.
09/11	1h			revisar código do módulo	Corrigido erro em Rec.Lex.
09/11	1h			redigir script de teste		Novos casos testes para a versão de Rec.Lex.