ReconheceStr( Str, Saida ):
char *p = Str, *ant = Str
POS = 0
LINHA = 0
ESTADOCORR = NULL
-- certificar aqui que nem Str e nem Saida são nulas --
PIL_CriarPilha(PILHA)
-- condretpil --
LIMPA( Saida )
-- certificar aqui se o grafo existe / não está vazio --
ENQUANTO TRUE
	EMPILHA EM PILHA O ESTADOCORR
	-- condretpil --
	CAMINHA( *p ) -> RET
	SE RET == N HÁ ARESTA
		ENQUANTO ESTADOCORR->TIPO != TERMINAL
		E PILHA N FOR VAZIA
			DESEMPILHA DE PILHA -> ESTADOCORR
			-- Estadocorr nulo --
			SE P == ANT
				BREAK
				// VAI PARA "SENÃO PILHA VAZIA"
			SENÃO
				P--
		FIM ENQUANTO
		SE ESTADOCORR->TIPO == TERMINAL
			MSG ESTADOCORR->NOME, INTERVALO( p , ant, &pos ), POS, LINHA, Saida -> {0,-1}
			SE -1: RET ERRO
			LINHA_UPDATE( p, ant, &LINHA )
			P++
			ANT = P
			SE *ANT == '\0'
				BREAK
			FIM SE
			VOLTA P ORIGEM
			ESVAZIA PILHA
		SENÃO PILHA É VAZIA
			ERRO MensagemDeErro, POS, LINHA, Saida -> {0,-1}
			SE -1: RET ERRO
			BREAK
	SENÃO RET == OK
		SE *P != \0'
			P++
		SENÃO
			BREAK
	SENÃO
		-- condretgrf -- 
	FIM SE
FIM ENQUANTO
FIM

INTERVALO( p , ant, *pos ):
	Str[BUFFER] = ""
	ENQUANTO P > ANT:
		Str = Str + *ant
		ant++
		(*pos)++
	RETORNA Str

LIMPA( path ):
	ABRIR path, APPEND
	SE NAO CONSEGUIU ABRIR
		RETORNA -1
	FECHAR path
	SE NAO CONSEGUIU FECHAR
		RETORNA -1
	RETORNA 0

ERRO( erro, posicao, linha, path ):
	ABRIR path, APPEND
	SE NAO CONSEGUIU ABRIR
		RETORNA -1
	ESCREVER erro, posicao, linha
	SE NAO CONSEGUIU ESCREVER
		RETORNA -1
	FECHAR path
	SE NAO CONSEGUIU FECHAR
		RETORNA -1
	RETORNA 0

MSG( nome, lexema, posicao, linha, path ):
	ABRIR path, APPEND
	SE NAO CONSEGUIU ABRIR
		RETORNA -1
	ESCREVER nome, lexema, posicao, linha
	SE NAO CONSEGUIU ESCREVER
		RETORNA -1
	FECHAR path
	SE NAO CONSEGUIU FECHAR
		RETORNA -1
	RETORNA 0

LINHA_UPDATE( p, ant, &linha ):
	ENQUANTO P > ANT:
		SE *ant == '\n':
			(*linha)++
		ant++