// Script:    TesteVerificaLista_1.script
// Autor:     Guilherme Dantas
// Data:      30/11/2018
// Propósito: Testa a função deturpa e verifica na estrutura de LISTA
//

== Inicializar valores
=declararparm   lista0  int 0
=declararparm   lista1  int 1
=declararparm   lista2  int 2
=declararparm   lista3  int 3
=declararparm   lista4  int 4

=declararparm   espacolixo int 999

=declararparm   str0    string  "abcdefg"
=declararparm   str1    string  "qwerty"
=declararparm   str2    string  "xxx"
=declararparm   str3    string  "xpto"

=declararparm   corr	string  "ElemCorr"

=declararparm   OK             int  0
=declararparm   ListaVazia     int  1
=declararparm   FimLista       int  2
=declararparm   NaoAchou       int  3
=declararparm   FaltouMemoria  int  4
=declararparm   ErroEstrutura  int  5
=declararparm   ErroParam      int  6

=declararparm   pNULL          int  0
=declararparm   pNaoNULL       int  1

=declararparm   DeturpaEliminaCorr    int 1
=declararparm   DeturpaProxNULL       int 2
=declararparm   DeturpaAntNULL        int 3
=declararparm   DeturpaProxLixo       int 4
=declararparm   DeturpaAntLixo        int 5
=declararparm   DeturpaConteudoNULL   int 6
=declararparm   DeturpaAlteraTipoNo   int 7
=declararparm   DeturpaDesencadeiaNo  int 8
=declararparm   DeturpaPontCorrNULL   int 9
=declararparm   DeturpaPontOrigNULL   int 10
=declararparm   DeturpaPontFimNULL    int 11
=declararparm   DeturpaEliminaLista   int 12
=declararparm   DeturpaCorrLixo       int 13
=declararparm   DeturpaOrigLixo       int 14
=declararparm   DeturpaFinalLixo      int 15
=declararparm   DeturpaNumElemNeg     int 16
=declararparm   DeturpaCorrElemNovo   int 17

=declararparm	ArqDefCnt      	string "DefContadoresLista.def"
=declararparm   ArqCntSaida     string "ContadoresLista.count"

== Inicializar contador
=inicializarcontadores ""
=lercontadores ArqDefCnt
=registraracumulador ArqCntSaida
=iniciarcontagem

== Verificar lista vazia
=verificar lista0 1
=AceitaFalhasAcumuladas 1

== Criar lista
=criarlista lista0
=verificar lista0 0

== Deturpar ponteiro fim, orig e corr, mas a lista é vazia então OK
=deturpar lista0 DeturpaPontCorrNULL
=deturpar lista0 DeturpaPontOrigNULL
=deturpar lista0 DeturpaPontFimNULL
=verificar lista0 0

== CONTADOR 1 >> Deturpar ponteiro fim, orig e corr para lista com um elemento
=inselemapos lista0 str0 OK
=verificar lista0 0
=deturpar lista0 DeturpaPontCorrNULL
=deturpar lista0 DeturpaPontOrigNULL
=deturpar lista0 DeturpaPontFimNULL
=verificar lista0 5
=AceitaFalhasAcumuladas 5
=destruirlista lista0

== CONTADOR 2 >> Deturpar ponteiro para lista, liberando-a com free ( pLista != NULL )
=criarlista lista0
=verificar lista0 0
=deturpar lista0 DeturpaEliminaLista
=verificar lista0 1
=AceitaFalhasAcumuladas 1
// Não é preciso destruir a lista, pois já foi liberada

== CONTADOR 3 >> Verificar ponteiro que não aponta para uma lista
=verificar espacolixo 1
=AceitaFalhasAcumuladas 1

== CONTADOR 4,5,6 >> Deturpar lista para que ponteiros da cabeça aponte para lixo
=criarlista lista1
=verificar lista1 0
=inselemantes lista1 str0 OK
=verificar lista1 0
=deturpar lista1 DeturpaCorrLixo
=deturpar lista1 DeturpaOrigLixo
=deturpar lista1 DeturpaFinalLixo
=verificar lista1 3
=AceitaFalhasAcumuladas 3
// [!] Não é chamada a função de destruir a lista, pois o programa voará, já que
// acessa ao ponteiro origem, que está com LIXO!

== Libera espaços referentes a estruturas, elementos e cabeças inativos
=criarlista lista2
=verificar lista2 3
=AceitaFalhasAcumuladas 3
// As três estruturas liberadas foram: cabeça, elemento e estrutura da lista anterior

== CONTADOR 7-10 >> Deturpa lista, desencadeando nó corrente, mas sem liberá-lo
=inselemapos lista2 str0 OK
=inselemapos lista2 str1 OK
=inselemapos lista2 str2 OK
=avancarelem lista2 -1 OK
=obtervalorelem lista2 str1 pNaoNULL
=verificar lista2 0
=deturpar lista2 DeturpaDesencadeiaNo
=verificar lista2 5
=AceitaFalhasAcumuladas 5
// Não há vazamento pois o ponteiro pCorr da cabeça ainda aponta para o elemento desencadeado
// Como perecebeu-se a contagem de elementos diferiu da calculada através do percorrimento
// da lista por ambos os sentidos.
=destruirlista lista2

== CONTADOR 11 >> Deturpa contador de elementos para número negativo
=criarlista lista2
=verificar lista2 2
=AceitaFalhasAcumuladas 2
// Aqui são liberados dois espaços: o elemento e estrutura desencadeados no caso anterior
// Não foram liberados na função Destruirlista pois esta não faz uso do ponteiro para
// elemento corrente mas sim do ponteiro origem.
=inselemapos lista2 str0 OK
=deturpar lista2 DeturpaNumElemNeg
=verificar lista2 3
=AceitaFalhasAcumuladas 3
// Além de verificado que o número não corresponde ao número real de elementos na lista,
// o verificador percebe que o número de elementos é negativo -- o que é ilógico!!
=destruirlista lista2

== CONTADOR 12 >> Deturpa ponteiro corrente de lista vazia para apontar para novo elemento
=criarlista lista3
=deturpar lista3 DeturpaCorrElemNovo
=verificar lista3 1
=AceitaFalhasAcumuladas 1
=destruirlista lista3

== Terminar contador
=pararcontagem
=gravarcontadores ArqCntSaida
=verificarcontagens 0
=terminarcontadores

// fim